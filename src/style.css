:root, input, button {
    font: 14px sans-serif;
}
body, html {
    margin: 0;
}
body {
    height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}
header {
    padding: 8px;
    background: #888;
    color: white;
    display: flex;
    box-sizing: border-box;
    height: var(--header);
    justify-content: space-around;
    align-items: center;
}
.hidden {
    display: none !important;
}
#scale {
    min-width: 200px;
}
header > div {
    display: flex;
    gap: 20px;
    align-items: center;
}
main {
    flex: 1;
    position: relative;
}
#scrollpane {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: scroll;
}
#helpContainer {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: #0008;
}
#helpContainer > div {
    --width: 700px;
    left: calc(50% - var(--width));
    height: calc(50% - var(--height));
    width: var(--width);
    height: var(--height);
    background: white;
    border: 2px solid black;
    padding: 20px;
}

.personmenu {
    position: absolute;
    display: block;
    width: fit-content;
    border: 1px solid black;
    padding: 8px;
    font-size: 20px;
    filter: drop-shadow(6px 8px 4px #0008);

    > div {
        border-top: 1px dotted gray;
        padding: 8px;
    }
    > div.focus {
        background-color: #CFC;
    }
}
body > #personmenu {
    display: none;
}

/**
 * CSS nesting, assuming support for "new" post Aug-2023 syntax
 */
.slippy-tree {

    --mother:  red;
    --father:  blue;
    --neutral: #8C8;
    --marriage: #181;
    --header: 50px;
    --living: #6c6;
    --member: #ebba34;
    /* These are accessed in JS. Values must be pixels, not other lengths */
    --spouse-margin: 10px;
    --sibling-margin: 20px;
    --other-margin: 40px;
    --generation-margin: 100px;

    display: block;
    position: relative;
    padding: 20px; /* Hack! Padding doesnt apply in SVG, but we read this value in the JS to compute position */

    a[href] {
        fill: blue;
    }

    text {
        font-size: 10px;
        text-anchor: middle;
        margin: 4px;    /* Hack! Margin doesnt apply in SVG, but we read this value in the JS to compute position */
    }

    .people {
        rect {
            fill: none;
            stroke: #aaa;
            stroke-width: 1px;
            cursor: pointer;
        }

        .pending {
            opacity: 0.3;
        }

        .male rect {
            fill: #CCF;
        }

        .female rect {
            fill: #FCC;
        }

        path {
            display: none;
        }

        .living path {
            display: initial;
            fill: var(--living);
        }
        .member path {
            display: initial;
            fill: var(--member);
        }


        .activeuser path {
            d: path("M 100% 100% v 25% l -25% -25% z");
            fill: var(--activeuser);
        }

        .focus rect {
            stroke: red;
            stroke-width: 2px; 
        }
    }

    .relations {
        :is(path,line) {
            opacity: 0.1;
            fill: none;
            stroke-width: 4px;
        }
        .mother                 { stroke: var(--mother); }
        .father                 { stroke: var(--father); }
        .marriage               { stroke: var(--marriage); stroke-width: 2px; opacity: 0.3; }
        .marriage.focus         { opacity: 0.6; }
        .dna                    { stroke-width: 16px; }
        .confident              { stroke-width: 8px; }
        .nonbiological          { stroke: var(--neutral); }
        .uncertain              { stroke-dasharray: 8px; }
    }

    .labels {
        .marriage {
            font-size: 8px;
            fill: black;
            text-anchor: left;
            transform: translate(8px, 0.2em);
        }
    }

    :is(.relations, .people. .labels) .focus {
        opacity: 0.8;
    }
}
